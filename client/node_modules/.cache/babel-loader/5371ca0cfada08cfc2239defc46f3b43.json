{"ast":null,"code":"var _jsxFileName = \"/home/missy/full_stack_open_course/part2/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\nimport phonebookService from './services/phonebook.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst safelyRemoveAtIndex = (persons, removeAt) => persons.slice(0, removeAt).concat(persons.slice(removeAt + 1));\n\nconst safelyAddAtIndex = (persons, newPerson, insertAt) => persons.slice(0, insertAt).concat(newPerson).concat(persons.slice(insertAt));\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [personsToDisplay, setPersonsToDisplay] = useState(persons);\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [successStatus, setSuccessStatus] = useState(true);\n  useEffect(() => {\n    phonebookService.getPersons().then(initialPersons => {\n      setPersons(initialPersons);\n      setPersonsToDisplay(initialPersons);\n    });\n  }, []);\n\n  const handleNewName = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNewNumber = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const addPerson = event => {\n    event.preventDefault();\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    };\n    const inPhonebook = persons.find(person => person.name === newName);\n\n    if (inPhonebook) {\n      if (window.confirm(`${newName} is already added to the phonebook. Replace the old number with a new one?`)) {\n        phonebookService.updatePerson(inPhonebook.id, newPerson).then(updatedPerson => {\n          const replaceAt = persons.findIndex(person => person.id === inPhonebook.id);\n          const removed = safelyRemoveAtIndex(persons, replaceAt);\n          const newPersons = safelyAddAtIndex(removed, updatedPerson, replaceAt);\n          setPersons(newPersons);\n          setPersonsToDisplay(newPersons);\n        }).catch(() => {\n          setSuccessStatus(false);\n          setNotificationMessage(`${newName} could not be updated because it was deleted from the server`);\n          setSuccessStatus(true);\n          setNotificationMessage(null);\n        });\n        setNotificationMessage(`${newName} was updated.`);\n        setTimeout(() => setNotificationMessage(null), 3000);\n      }\n    } else {\n      phonebookService.addPerson(newPerson).then(addedPerson => {\n        const newPersons = persons.concat(addedPerson);\n        setPersons(newPersons);\n        setPersonsToDisplay(newPersons);\n      });\n      setNotificationMessage(`${newName} was added.`);\n      setTimeout(() => setNotificationMessage(null), 3000);\n    }\n  };\n\n  const deletePerson = id => {\n    const personToDelete = persons.find(person => person.id === id);\n\n    if (window.confirm(`Delete ${personToDelete.name}?`)) {\n      phonebookService.deletePerson(id).then(() => {\n        const deleteAt = persons.findIndex(person => person.id === id);\n        const newPersons = safelyRemoveAtIndex(persons, deleteAt);\n        setPersons(newPersons);\n        setPersonsToDisplay(newPersons);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: notificationMessage,\n      successStatus: successStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      persons: persons,\n      setPersonsToDisplay: setPersonsToDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add new contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      newName: newName,\n      newNumber: newNumber,\n      handleNewName: handleNewName,\n      handleNewNumber: handleNewNumber,\n      onSubmit: addPerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      personsToDisplay: personsToDisplay,\n      deleteHandler: deletePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"icLQjCVTsswpQeppx68X91+Sw0Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/missy/full_stack_open_course/part2/phonebook/src/App.js"],"names":["useState","useEffect","Filter","PersonForm","Persons","Notification","phonebookService","safelyRemoveAtIndex","persons","removeAt","slice","concat","safelyAddAtIndex","newPerson","insertAt","App","setPersons","newName","setNewName","newNumber","setNewNumber","personsToDisplay","setPersonsToDisplay","notificationMessage","setNotificationMessage","successStatus","setSuccessStatus","getPersons","then","initialPersons","handleNewName","event","target","value","handleNewNumber","addPerson","preventDefault","name","number","inPhonebook","find","person","window","confirm","updatePerson","id","updatedPerson","replaceAt","findIndex","removed","newPersons","catch","setTimeout","addedPerson","deletePerson","personToDelete","deleteAt"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification'\n\nimport phonebookService from './services/phonebook.js';\n\nconst safelyRemoveAtIndex = (persons, removeAt) => (\n  persons\n  .slice(0, removeAt)\n  .concat(persons\n    .slice(removeAt + 1))\n);\n\nconst safelyAddAtIndex = (persons, newPerson, insertAt) => (\n  persons\n  .slice(0, insertAt)\n  .concat(newPerson)\n  .concat(persons\n    .slice(insertAt))\n);\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [personsToDisplay, setPersonsToDisplay] = useState(persons);\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [successStatus, setSuccessStatus] = useState(true);\n\n  useEffect(() => {\n    phonebookService.getPersons().then(initialPersons => {\n      setPersons(initialPersons);\n      setPersonsToDisplay(initialPersons);\n    });\n  }, []);\n\n  const handleNewName = event => {\n    setNewName(event.target.value);\n  }\n\n  const handleNewNumber = event => {\n    setNewNumber(event.target.value);\n  }\n\n  const addPerson = event => {\n    event.preventDefault();\n    const newPerson = { name: newName, number: newNumber };\n    const inPhonebook = persons.find(person => person.name === newName);\n\n    if (inPhonebook) {\n      if (window.confirm(`${newName} is already added to the phonebook. Replace the old number with a new one?`)) {\n        phonebookService.updatePerson(\n          inPhonebook.id, \n          newPerson\n        ).then(updatedPerson => {\n          const replaceAt = persons.findIndex(person => (\n            person.id === inPhonebook.id\n          ));\n  \n          const removed = safelyRemoveAtIndex(persons, replaceAt);\n          const newPersons = safelyAddAtIndex(\n            removed,\n            updatedPerson,\n            replaceAt\n          );\n  \n          setPersons(newPersons);\n          setPersonsToDisplay(newPersons);\n        }).catch(() => {\n          setSuccessStatus(false);\n          setNotificationMessage(`${newName} could not be updated because it was deleted from the server`);\n\n          setSuccessStatus(true);\n          setNotificationMessage(null);\n        });\n\n        setNotificationMessage(`${newName} was updated.`);\n        setTimeout(() => setNotificationMessage(null), 3000);\n      }\n    } else { \n      phonebookService.addPerson(newPerson).then(addedPerson => {\n        const newPersons = persons.concat(addedPerson);\n        setPersons(newPersons);\n        setPersonsToDisplay(newPersons);  \n      });\n\n      setNotificationMessage(`${newName} was added.`);\n      setTimeout(() => setNotificationMessage(null), 3000);\n    }\n  }\n\n  const deletePerson = id => {\n    const personToDelete = persons.find(person => person.id === id);\n\n    if (window.confirm(`Delete ${personToDelete.name}?`)) {\n      phonebookService.deletePerson(id)\n      .then(() => {\n        const deleteAt = persons.findIndex(person => person.id === id);\n        const newPersons = safelyRemoveAtIndex(persons, deleteAt);\n  \n        setPersons(newPersons);\n        setPersonsToDisplay(newPersons);\n      });\n    }\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={notificationMessage} successStatus={successStatus} />\n      <Filter persons={persons} setPersonsToDisplay={setPersonsToDisplay} />\n      <h2>Add new contact</h2>\n      <PersonForm \n        newName={newName}\n        newNumber={newNumber}\n        handleNewName={handleNewName}\n        handleNewNumber={handleNewNumber}\n        onSubmit={addPerson}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        personsToDisplay={personsToDisplay}\n        deleteHandler={deletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}