{"ast":null,"code":"import axios from'axios';var baseUrl='/api/persons';var getPersons=function getPersons(){return axios.get(baseUrl).then(function(response){return response.data;});};var addPerson=function addPerson(newPerson){return axios.post(baseUrl,newPerson).then(function(response){return response.data;});};var deletePerson=function deletePerson(id){return axios.delete(\"\".concat(baseUrl,\"/\").concat(id)).then(function(response){return response.data;});};var updatePerson=function updatePerson(id,newContact){return axios.put(\"\".concat(baseUrl,\"/\").concat(id),newContact).then(function(response){return response.data;});};export default{getPersons:getPersons,addPerson:addPerson,deletePerson:deletePerson,updatePerson:updatePerson};","map":{"version":3,"sources":["/home/missy/full_stack_open_course/part2/phonebook/src/services/phonebook.js"],"names":["axios","baseUrl","getPersons","get","then","response","data","addPerson","newPerson","post","deletePerson","id","delete","updatePerson","newContact","put"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,OAAO,CAAG,cAAhB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SACjBF,CAAAA,KAAK,CAACG,GAAN,CAAUF,OAAV,EAAmBG,IAAnB,CAAwB,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAAhC,CADiB,EAAnB,CAIA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,SAAS,QACzBR,CAAAA,KAAK,CAACS,IAAN,CAAWR,OAAX,CAAoBO,SAApB,EAA+BJ,IAA/B,CAAoC,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAA5C,CADyB,EAA3B,CAIA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,EAAE,QACrBX,CAAAA,KAAK,CAACY,MAAN,WAAgBX,OAAhB,aAA2BU,EAA3B,GAAiCP,IAAjC,CAAsC,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAA9C,CADqB,EAAvB,CAIA,GAAMO,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACF,EAAD,CAAKG,UAAL,QACnBd,CAAAA,KAAK,CAACe,GAAN,WAAad,OAAb,aAAwBU,EAAxB,EAA8BG,UAA9B,EAA0CV,IAA1C,CAA+C,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAAvD,CADmB,EAArB,CAIA,cAAe,CAAEJ,UAAU,CAAVA,UAAF,CAAcK,SAAS,CAATA,SAAd,CAAyBG,YAAY,CAAZA,YAAzB,CAAuCG,YAAY,CAAZA,YAAvC,CAAf","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons';\n\nconst getPersons = () => (\n  axios.get(baseUrl).then(response => response.data) \n);\n\nconst addPerson = newPerson => (\n  axios.post(baseUrl, newPerson).then(response => response.data)\n);\n\nconst deletePerson = id => (\n  axios.delete(`${baseUrl}/${id}`).then(response => response.data)\n);\n\nconst updatePerson = (id, newContact) => (\n  axios.put(`${baseUrl}/${id}`, newContact).then(response => response.data)\n);\n\nexport default { getPersons, addPerson, deletePerson, updatePerson };"]},"metadata":{},"sourceType":"module"}