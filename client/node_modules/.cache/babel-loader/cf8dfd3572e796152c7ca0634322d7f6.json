{"ast":null,"code":"var _jsxFileName = \"/home/missy/full_stack_open_course/part2/phonebook/src/components/PersonForm.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PersonForm = props => {\n  const {\n    newName,\n    newNumber,\n    handleNewName,\n    handleNewNumber,\n    onSubmit\n  } = props;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (persons.map(person => person.name).includes(newName)) {\n      alert(`${newName} is already added to the phonebook`);\n    } else {\n      setPersons(persons.concat({\n        id: persons.length,\n        name: newName,\n        number: newNumber\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleNewName,\n        value: newName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleNewNumber,\n        value: newNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PersonForm;\nexport default PersonForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonForm\");","map":{"version":3,"sources":["/home/missy/full_stack_open_course/part2/phonebook/src/components/PersonForm.js"],"names":["PersonForm","props","newName","newNumber","handleNewName","handleNewNumber","onSubmit","handleSubmit","event","preventDefault","persons","map","person","name","includes","alert","setPersons","concat","id","length","number"],"mappings":";;;AAAA,MAAMA,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM;AACJC,IAAAA,OADI;AACKC,IAAAA,SADL;AACgBC,IAAAA,aADhB;AAC+BC,IAAAA,eAD/B;AACgDC,IAAAA;AADhD,MAEFL,KAFJ;;AAIA,QAAMM,YAAY,GAAGC,KAAK,IAAI;AAC5BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAIC,OAAO,CAACC,GAAR,CAAYC,MAAM,IAAIA,MAAM,CAACC,IAA7B,EAAmCC,QAAnC,CAA4CZ,OAA5C,CAAJ,EAA0D;AACxDa,MAAAA,KAAK,CAAE,GAAEb,OAAQ,oCAAZ,CAAL;AACD,KAFD,MAEO;AACLc,MAAAA,UAAU,CAACN,OAAO,CAACO,MAAR,CACT;AAAEC,QAAAA,EAAE,EAAER,OAAO,CAACS,MAAd;AAAsBN,QAAAA,IAAI,EAAEX,OAA5B;AAAqCkB,QAAAA,MAAM,EAAEjB;AAA7C,OADS,CAAD,CAAV;AAGD;AACF,GAVD;;AAYA,sBACE;AAAM,IAAA,QAAQ,EAAEG,QAAhB;AAAA,4BACE;AAAA,wCACQ;AAAO,QAAA,QAAQ,EAAEF,aAAjB;AAAgC,QAAA,KAAK,EAAEF;AAAvC;AAAA;AAAA;AAAA;AAAA,cADR;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,0CACU;AAAO,QAAA,QAAQ,EAAEG,eAAjB;AAAkC,QAAA,KAAK,EAAEF;AAAzC;AAAA;AAAA;AAAA;AAAA,cADV;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAA,6BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA9BD;;KAAMH,U;AAgCN,eAAeA,UAAf","sourcesContent":["const PersonForm = (props) => {\n  const { \n    newName, newNumber, handleNewName, handleNewNumber, onSubmit\n  } = props;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (persons.map(person => person.name).includes(newName)) {\n      alert(`${newName} is already added to the phonebook`);\n    } else {\n      setPersons(persons.concat(\n        { id: persons.length, name: newName, number: newNumber }\n      ));\n    }\n  }\n  \n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        name: <input onChange={handleNewName} value={newName} />\n      </div>\n      <div>\n        number: <input onChange={handleNewNumber} value={newNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n}\n\nexport default PersonForm;"]},"metadata":{},"sourceType":"module"}